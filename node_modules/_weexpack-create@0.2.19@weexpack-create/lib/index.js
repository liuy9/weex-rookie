'use strict';

var ora = require('ora');
var download = require('download-git-repo');
var exists = require('fs').existsSync;
var rm = require('rimraf').sync;
var home = require('user-home');
var path = require('path');
var generate = require('./generate');

var _require = require('./utils'),
    logger = _require.logger,
    localpath = _require.localpath;

var isLocalPath = localpath.isLocalPath;
var getTemplatePath = localpath.getTemplatePath;

/**
 * Check the diretory is empty or not.
 *
 * @param {string} dir - directory where the project will be created. Required.
 * @param {string} dirname - name of the directory. Required
 * @param {string} template - tempalte name. Required.
 * @param {boolean} isRandomPath - whether dir is a random path that user assigned
 */
module.exports = function (dir, dirname, template, extEvents, options, isRandomPath) {
  if (typeof extEvents === 'boolean') {
    isRandomPath = extEvents;
    extEvents = null;
    options = null;
  } else if (typeof options === 'boolean') {
    isRandomPath = options;
    options = null;
  }

  return new Promise(function (resolve, reject) {
    if (extEvents && typeof extEvents !== 'boolean') {
      logger.setupEvents(extEvents);
    }
    if (isLocalPath(template)) {
      var templatePath = getTemplatePath(template);
      if (exists(templatePath)) {
        generate(dirname, templatePath, dir, function (err) {
          if (err) logger.error(err);
          logger.success('Generated ' + dirname);
        }, isRandomPath);
      } else {
        logger.error('Local template "' + template + '" not found.');
      }
    }
    // download template from git.
    else {
        var tmp = path.join(home, '.weex-templates', template.replace(/\//g, '-'));
        var spinner = ora('Downloading template from ' + template + ' repo');
        spinner.start();
        // Remove if local template exists
        if (exists(tmp)) rm(tmp);
        download(template, tmp, options, function (err) {
          spinner.stop();
          if (err) logger.error('Failed to download repo ' + template + ': ' + err.message.trim());
          generate(dirname, tmp, dir, function (err) {
            if (err) logger.error(err);
            logger.success('Generated ' + dirname);
          }, isRandomPath);
        });
      }
  });
};